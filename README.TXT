------------------------------------------------------------------------
This is the project README file. Here, you should describe your project.
Tell the reader (someone who does not know anything about this project)
all he/she needs to know. The comments should usually include at least:
------------------------------------------------------------------------

PROJECT TITLE: Words Project ICS4U
PURPOSE OF PROJECT: To create a words-based game that incorporates at least two Data-Structures within a team of 4.
VERSION or DATE: March 2, 2018
HOW TO START THIS PROJECT: After downloading the folder, open up the Greenfoot project in Greenfoot (look for the file with the Greenfoot extension).
AUTHORS: Eric Liu, Justin Chan, Benjamin Wen
USER INSTRUCTIONS: The game is a simple typing game where the user tries to collect the highest score possible by typing in the on-screen words correctly within a certain period of time. The game end when the words make contact with the player on screen.
DATA STRUCTURES USED: The set of data structures that are used in the game are as follows: ArrayList, Queue, and Stack. Additionally, we may decide to use a HashMap and a HashSet in future updates. This makes for a total of 3 data structures that are used in total. The ArrayList can be found in the "Reading_and_Writing_Text_Files" class as well as several other classes such as "Main_Game" and "Scoreboard." In these classes, the ArrayList is used as a list to store the words/enemies as well as to store a list of the player information. Likewise, the Queue and Stack can be found mainly in the "Main_Game" class as well. The Queue is used to store the enemies into a queue, while the Stack is used to store both the background pictures as either Strings/GreenfootImages and the Strings/GreenfootSounds.
ASPECTS TO BE REUSED IN FINAL GAME: Several classes including: "Button," "Text," "Slider," "Sound_Info," "SimpleTimer," and even the built-in GifImage class which wasn't used in this project. Additionally, we may also decide to use the "Reading_and_Writing_Text_Files" class if our game reads from a list of data. Of course, we will also probably decide to include the "Queue" and "Stack" classes.