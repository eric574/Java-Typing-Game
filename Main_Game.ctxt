#BlueJ class context
comment0.target=Main_Game
comment0.text=\n\ The\ code\ for\ the\ main\ game,\ note\ that\ there\ are\ varying\ difficulty\ levels\n\ \n\ @author\ Eric\ Liu\n\ @version\ March\ 9,\ 2018\n
comment1.params=level\ mode\ sound_info\ user\ info
comment1.target=Main_Game(java.lang.String,\ java.lang.String,\ Sound_Info,\ Ship_Sprite,\ Background_Info)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Main_Game.\n
comment10.params=
comment10.target=void\ getReady()
comment10.text=\n\ Method\ prepares\ the\ incoming\ words\ and\ everything\ else\ needed\ to\ start\n
comment11.params=
comment11.target=void\ addShip()
comment11.text=\n\ Method\ adds\ the\ ship\ object\ to\ the\ centre\ of\ the\ screen\n\ Is\ called\ upon\ in\ the\ setup\ method\ (note\ that\ the\ ship\ isn't\ to\ be\ static)\n
comment12.params=
comment12.target=void\ generateEnemies()
comment12.text=\n\ Method\ generates\ the\ enemies\ and\ pushes\ them\ into\ the\ queue,\ using\ the\ rng\ object\n
comment13.params=
comment13.target=void\ getInput()
comment13.text=\n\ Method\ gets\ the\ user\ inputting\ on-screens\n\ Use\ Greenfoot.isKeyDown()\ for\ handling\ the\ user\ inputting\n\ Use\ Word_Display.addWord()\ method\ to\ add\ the\ word\ onto\ the\ world\ screen\n
comment14.params=
comment14.target=void\ AskUsername()
comment14.text=\n\ Method\ asks\ player\ for\ username\ before\ starting\ the\ game\n
comment15.params=image
comment15.target=void\ Set_Background(greenfoot.GreenfootImage)
comment15.text=\n\ Method\ sets\ the\ background\ (makes\ it\ easier\ to\ change\ the\ background\ picture)\n
comment16.params=song
comment16.target=void\ Set_Music(greenfoot.GreenfootSound)
comment16.text=\n\ Method\ sets\ the\ music\ (makes\ it\ easier\ to\ change\ the\ background\ picture)\n
comment17.params=
comment17.target=void\ levelUp()
comment17.text=\n\ Method\ does\ most\ of\ the\ levelling\ up\ for\ the\ main\ game\n\ This\ includes\ changing\ the\ music\ and\ background\ of\ the\ screen,\ as\ well\ as\ increasing\ number\ of\ words,\ and\ the\ speed\n
comment18.params=
comment18.target=void\ getAdjectives()
comment18.text=\n\ Get\ a\ list\ of\ the\ adjectives\n
comment19.params=
comment19.target=void\ getNouns()
comment19.text=\n\ Get\ a\ list\ of\ the\ nouns\n
comment2.params=
comment2.target=void\ GenerateBackgrounds()
comment2.text=\n\ Generate\ all\ of\ the\ backgrounds\ by\ enqueuing\ them\ into\ the\ queue\n
comment20.params=
comment20.target=void\ getVerbs()
comment20.text=\n\ Get\ a\ list\ of\ the\ verbs\n
comment21.params=player
comment21.target=void\ writeScores(Player_Info)
comment21.text=\n\ Write\ the\ player_info\ to\ the\ scores.txt\ file\n\ (Uses\ Java's\ BufferedWriter\ and\ FileWriter)\n
comment22.params=
comment22.target=void\ Stop_Songs()
comment22.text=\n\ Method\ stops\ all\ of\ the\ songs\ from\ playing\n
comment23.params=
comment23.target=void\ Display_Level()
comment23.text=\n\ Always\ display\ current\ level\ on\ the\ screen\n
comment24.params=
comment24.target=void\ Display_Score()
comment24.text=\n\ Always\ display\ current\ score\ on\ the\ screen\n
comment25.params=
comment25.target=void\ Display_Difficulty_Level()
comment25.text=\n\ Always\ display\ the\ current\ difficulty\ level\n
comment26.params=
comment26.target=void\ Display_Game_Mode()
comment26.text=\n\ Always\ display\ the\ chosen\ game\ mode\n
comment27.params=
comment27.target=void\ Calc_Score()
comment27.text=\n\ Calculate\ the\ score\ of\ the\ player\n\ Score\ varies\ depending\ on\ the\ difficulty\ level\ chosen\ as\ well\ as\ how\ many\ words/enemies\ were\ destroyed\n
comment28.params=
comment28.target=void\ CheckLoss()
comment28.text=\n\ For\ when\ the\ player\ dies\n
comment29.params=
comment29.target=void\ CheckWin()
comment29.text=\n\ Check\ to\ see\ if\ the\ player\ won\!\n\ This\ occurs\ when\ the\ user\ has\ typed\ all\ of\ the\ words\ there\ is,\ assuming\ that\ they\ haven't\ died\ yet\n
comment3.params=
comment3.target=void\ GenerateSounds()
comment3.text=\n\ Generate\ all\ of\ the\ sounds\ by\ pushing\ them\ into\ the\ stack\n
comment30.params=
comment30.target=void\ Process_Words()
comment30.text=\n\ Method\ processes\ the\ words\ on\ the\ screen\n
comment31.params=
comment31.target=void\ Shift_Elem_Left()
comment31.text=\n\ Method\ shifts\ every\ element,\ starting\ from\ the\ first\ element,\ to\ the\ right\ in\ the\ Word\ array\n
comment32.params=
comment32.target=void\ Shift_Elem_Right()
comment32.text=\n\ Method\ shifts\ every\ element,\ starting\ from\ the\ last\ element,\ to\ the\ left\ in\ the\ Word\ array\n
comment33.params=up_pressed\ down_pressed
comment33.target=void\ Switch_Word(boolean,\ boolean)
comment33.text=\n\ This\ method\ handles\ the\ processing\ of\ switching\ in\ between\ words,\ when\ the\ user\ presses\ the\ up\ or\ down\ keys\n\ We\ use\ the\ Word\ array\ to\ toggle\ in\ between\ words\n\ @param\ up_pressed\ \=\ is\ up_key\ pressed\n\ @param\ down_pressed\ \=\ is\ down_key\ pressed\n
comment34.params=
comment34.target=java.lang.String\ replaceWord()
comment34.text=\n\ Used\ to\ return\ a\ string\ in\ the\ array\ of\ words\n
comment35.params=
comment35.target=void\ ToggleWords()
comment35.text=\n\ Method\ toggles\ the\ array\ of\ words\n
comment36.params=
comment36.target=void\ act()
comment36.text=\n\ Act\ -\ do\ whatever\ the\ Button\ wants\ to\ do.\ This\ method\ is\ called\ whenever\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\n
comment4.params=
comment4.target=void\ Set_Difficulty_Level()
comment4.text=\n\ Method\ sets\ the\ difficulty\ level\ of\ the\ game,\ depending\ on\ the\ parameter\ given\n\ The\ difficulty\ level\ should\ affect\ factors\ like\ speed\ and\ maybe\ even\ the\ difficulty\ of\ the\ words\ (if\ we\ have\ time)\n
comment5.params=
comment5.target=void\ Set_Game_Mode()
comment5.text=\n\ Method\ sets\ the\ game\ mode\ of\ the\ game,\ depending\ on\ the\ parameter\ given\n\ There\ are\ two\ game\ modes\:\ blitz\ and\ blitzkrieg\n\ blitz\ is\ where\ enemies\ fall\ one\ by\ one,\ after\ a\ certain\ time\ interval\n\ blitzkrieg\ is\ where\ enemies\ fall\ simultaneously,\ in\ fixed\ numbers\n
comment6.params=
comment6.target=void\ Store_Enemies()
comment6.text=\n\ Method\ is\ used\ to\ preprocess\ the\ enemies\ and\ add\ them\ to\ a\ list\ before\ starting\ the\ animations\n
comment7.params=
comment7.target=void\ moveObjects()
comment7.text=\n\ Use\ this\ method\ for\ the\ blitz\ mode\n
comment8.params=
comment8.target=void\ move_Objects()
comment8.text=\n\ Use\ this\ method\ for\ the\ blitzkrieg\ mode\n\ Need\ to\ ensure\ that\ the\ enemies\ are\ not\ added\ in\ the\ same\ spot\ to\ start\n
comment9.params=
comment9.target=void\ Clear_Bullets()
comment9.text=\n\ Method\ clears\ the\ screen\ of\ any\ remaining\ bullets\ left\ on-screen\n\ Call\ on\ this\ after\ the\ enemies\ have\ been\ destroyed\ (since\ bullets\ stop\ moving)\n
numComments=37
