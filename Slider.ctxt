#BlueJ class context
comment0.target=Slider
comment0.text=\n\ A\ slider\ to\ allow\ a\ user\ to\ select\ a\ number\ in\ a\ given\ range.\n\ \n\ Create\ a\ Slider\ by\ calling\ <code>new\ {@link\ Slider()}</code>\ (for\ the\ default\ size)\n\ or\ <code>new\ {@link\ Slider(int,\ int)}</code>\ (for\ a\ custom\ size).\n\ Set\ teh\ maximum\ value\ that\ the\ user\ can\ select\ by\ calling\n\ {@link\ setMaximumValue(int)},\ set\ the\ initial\ value\ by\ calling\n\ {@link\ setValue(int)}\ and\ add\ it\ to\ the\ world\ by\ calling\ the\n\ addObject(Actor,\ int,\ int)\ method\ on\ the\ World.\n\ \n\ You\ can\ also\ set\ how\ the\ slider\ should\ display\ by\ calling\ the\ other\ methods.\n\ This\ <i>should</i>\ be\ done\ before\ adding\ the\ slider\ to\ the\ world,\ but\ does\ not\ need\ to\ be\n\ \n\ @author\ mBread\n\ @version\ 29-01-2008\n
comment1.params=
comment1.target=Slider()
comment1.text=\n\ Create\ a\ new\ slider\ with\ the\ default\ size.\ It\ will\ be\ 200\ pixels\ wide\ by\n\ 20\ pixels\ high.\n
comment10.params=
comment10.target=boolean\ isShowingPercentage()
comment10.text=\n\ Check\ whether\ the\ slider\ is\ set\ to\ display\ the\ value\ as\ a\ percentage.\n\ \n\ @see\ showPercentage(boolean)\n\ @see\ isShowingValue()\n\ @return\ true\ if\ the\ percentage\ is\ being\ displayed,\ false\ if\ it\ is\ not\n
comment11.params=sections
comment11.target=void\ setMajorSections(int)
comment11.text=\n\ Set\ the\ number\ of\ major\ sections\ to\ be\ marked.\ Set\ the\ number\ of\ sections\ to\n\ zero\ to\ not\ display\ any\ major\ markers.\n\ \n\ There\ will\ be\ 1\ more\ marker\ than\ sections\ as\ there\ is\ a\n\ marker\ at\ both\ ends\ as\ well\ as\ between\ each\ section\n\ \n\ @see\ setMinorSections(int)\n\ @param\ sections\ The\ number\ of\ major\ sections\ to\ display\n
comment12.params=
comment12.target=int\ getMajorSections()
comment12.text=\n\ Get\ the\ number\ of\ major\ sections\ that\ are\ marked.\n\ \n\ @see\ setMajorSections(int)\n\ @return\ The\ number\ of\ major\ sections\ that\ are\ marked\n
comment13.params=sections
comment13.target=void\ setMinorSections(int)
comment13.text=\n\ Set\ the\ number\ of\ minor\ sections\ to\ be\ marked\ per\ major\ secton.\ Set\ this\n\ to\ zero\ or\ 1\ to\ not\ display\ any\ minor\ markers.\n\ \n\ There\ will\ be\ one\ less\ minor\ marker\ (per\ major\ section)\ than\ the\ number\n\ of\ minor\ sections\ as\ there\ is\ not\ a\ marker\ at\ each\ end\ due\ to\ the\ major\n\ markers\ being\ there.\n\ \n\ @see\ setMajorSections(int)\n\ @param\ sections\ The\ number\ of\ minor\ sections\ to\ mark\ per\ major\ section\n
comment14.params=
comment14.target=int\ getMinorSections()
comment14.text=\n\ Get\ the\ number\ of\ minor\ sections\ that\ are\ marked.\n\ \n\ @see\ setMinorSections(int)\n\ @return\ The\ number\ of\ minor\ sections\ that\ are\ marked\n
comment15.params=value
comment15.target=void\ setMaximumValue(int)
comment15.text=\n\ Set\ the\ maximum\ value\ that\ the\ user\ can\ select.\n\ \n\ @param\ value\ The\ new\ maximum\ value\n
comment16.params=
comment16.target=int\ getMaximumValue()
comment16.text=\n\ Get\ the\ current\ maximum\ value\ which\ the\ user\ can\ select\n\ \n\ @return\ The\ maximum\ value\n
comment17.params=
comment17.target=int\ getPercentage()
comment17.text=\n\ Get\ the\ percentage\ shown\ on\ the\ slider\n\ \n\ @return\ The\ percentage\ as\ an\ integer\n
comment18.params=x
comment18.target=int\ posToValue(int)
comment18.text=\n\ Convert\ a\ pixel\ position\ (relitive\ to\ the\ left\ of\ the\ selectable\ area)\n\ to\ a\ selected\ value.\n
comment19.params=v
comment19.target=int\ valueToPos(int)
comment19.text=\n\ Convert\ a\ selected\ value\ to\ a\ pixel\ position\n
comment2.params=width\ height
comment2.target=Slider(int,\ int)
comment2.text=\n\ Create\ a\ new\ slider.\n\ \n\ @param\ width\ The\ width\ of\ the\ slider\ in\ pixels\n\ @param\ height\ The\ height\ of\ th\ slider\ in\ pixels\n
comment20.params=
comment20.target=void\ createImages()
comment20.text=\n\ Create\ the\ background\ &\ foreground\ images\n
comment21.params=
comment21.target=void\ updateImage()
comment21.text=\n\ Update\ the\ position\ of\ the\ foreground\ image,\ and\ the\ text\ of\ the\n\ value\ label.\n
comment3.params=world
comment3.target=void\ addedToWorld(greenfoot.World)
comment3.text=\n\ This\ method\ is\ called\ by\ the\ World\ class\ when\ the\ slider\ is\ added\ to\ the\n\ world.\ You\ will\ not\ need\ to\ call\ this\ method.\n\ \n\ @param\ world\ The\ world\n
comment4.params=
comment4.target=void\ act()
comment4.text=\n\ This\ method\ is\ called\ by\ Greenfoot,\ and\ updates\ the\ slider\ if\ the\ user\n\ has\ dragged\ the\ slider.\n
comment5.params=value
comment5.target=void\ setValue(int)
comment5.text=\n\ Set\ the\ current\ selected\ value\ of\ the\ slider.\ The\ display\ will\ change\n\ to\ represent\ this\ new\ value.\n\ \n\ @param\ value\ The\ new\ value\n
comment6.params=
comment6.target=int\ getValue()
comment6.text=\n\ Get\ the\ current\ value.\n\ \n\ @return\ The\ current\ selected\ value\n
comment7.params=show
comment7.target=void\ showValue(boolean)
comment7.text=\n\ Set\ whether\ the\ value\ should\ be\ displayed\ next\ to\ the\ slider.\n\ \n\ If\ this\ method\ is\ called\ with\ false\ as\ the\ parameter\ then\ it\ will\n\ also\ set\ {@link\ shoePercentage(boolean)}\ will\ also\ be\ set\ to\ false.\n\ \n\ @see\ showPercentage(boolean)\n\ @param\ show\ \ true\ if\ the\ value\ should\ be\ displayed\ as\ text,\n\ false\ if\ it\ should\ not\ be\n
comment8.params=
comment8.target=boolean\ isShowingValue()
comment8.text=\n\ Check\ whether\ the\ slider\ is\ set\ to\ display\ the\ value.\n\ \n\ @see\ showValue(boolean)\n\ @see\ isShowingPercentage()\n\ @return\ true\ if\ the\ value\ is\ being\ displayed,\ false\ if\ it\ is\ not\n
comment9.params=show
comment9.target=void\ showPercentage(boolean)
comment9.text=\n\ Set\ whether\ the\ value\ will\ be\ displayed\ next\ to\ the\ slider\ as\ a\ percentage.\n\ \n\ This\ method\ will\ take\ precedence\ over\ {@link\ showValue(boolean)}.\ If\n\ both\ are\ set\ to\ true,\ the\ percentage\ is\ shown.\ If\ both\ are\ true\ and\n\ showPercentage(false)\ is\ called\ then\ the\ value\ will\ be\ shown.\ If\ both\n\ are\ true\ and\ showValue(false)\ is\ called\ then\ neither\ the\ value\ nor\n\ percentage\ is\ shown.\n\ \n\ @see\ showValue(boolean)\n\ @see\ isShowingPercentage()\n\ @param\ show\ true\ if\ the\ value\ should\ be\ displayed\ as\ a\ percentage\ of\n\ the\ maximum\ value,\ false\ if\ it\ should\ not.\n
numComments=22
