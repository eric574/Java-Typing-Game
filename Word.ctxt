#BlueJ class context
comment0.target=Word
comment0.text=\n\ Used\ for\ the\ on-screen\ words\n\ The\ actor\ class\ should\ display\ the\ words\ on-screen\n\ \n\ @author\ Eric\ Liu\n\ @version\ March\ 9,\ 2018\n
comment1.params=player_sprite\ type\ id\ speednum
comment1.target=Word(Ship_Sprite,\ java.lang.String,\ int,\ int)
comment1.text=\n\ Constructor\ for\ Word\ class\n
comment10.params=actor1\ actor2
comment10.target=double\ getDistance(Word,\ Word)
comment10.text=\n\ Returns\ the\ Euclidean\ distance\ as\ a\ double\n
comment11.params=idx
comment11.target=Word\ getNearestActor(int)
comment11.text=\n\ Method\ returns\ the\ nearest\ Word\ to\ the\ current\ word\ being\ highlighted\ in\ green\n\ Time\ Complexity\:\ O(N)\n\ @param\ idx\ \=\ current\ index\ of\ green\ highlighted\ in\ the\ words\ list\n
comment12.params=
comment12.target=void\ checkOverlapping()
comment12.text=\n\ Method\ checks\ to\ see\ if\ the\ word/enemy\ is\ overlapping\ with\ another\ word/enemy\ in\ the\ world\ and\ repositions\ the\ highlighted\ word\n\ This\ is\ important\ since\ the\ user\ must\ be\ able\ to\ see\ the\ text\ of\ the\ highlighted\ word\n
comment13.params=
comment13.target=void\ RemoveLetter()
comment13.text=\n\ Method\ removes\ the\ letter\ when\ the\ user\ presses\ the\ backspace\ key\n
comment14.params=
comment14.target=void\ RemoveWord()
comment14.text=\n\ Remove\ the\ text\ from\ the\ screen\ (not\ necessary)\n
comment15.params=
comment15.target=boolean\ isDestroyed()
comment15.text=\n\ Used\ to\ remove\ any\ bullets\ on\ screen\n
comment16.params=flag
comment16.target=void\ setBoolDestroyed(boolean)
comment16.text=\n\ Set\ the\ boolean\ destroyed\ to\ value\ of\ parameter\n
comment17.params=
comment17.target=void\ Display_Word()
comment17.text=\n\ Set\ the\ string\ text\ right\ beside\ the\ enemy\ sprite\n
comment18.params=wordTyped
comment18.target=void\ wordHit(boolean)
comment18.text=\n\ Only\ is\ dealt\ damage\ if\ the\ user\ correctly\ types\ the\ character\ for\ the\ String\ word\n\ @param\ wordTyped\ \=\ has\ whole\ word\ been\ typed\ correctly?\n
comment19.params=
comment19.target=void\ dyingAnimation1()
comment19.text=\n\ First\ dying\ animation\ for\ the\ ship\n
comment2.params=
comment2.target=java.lang.String\ getColour()
comment2.text=\n\ Get\ the\ colour\ as\ a\ string\n
comment20.params=
comment20.target=java.lang.String\ getWord()
comment20.text=\n\ Method\ returns\ the\ word\ as\ a\ string\n
comment21.params=
comment21.target=char\ GetNextLetter()
comment21.text=\n\ Method\ gets\ the\ next\ character\ in\ the\ string\n
comment22.params=
comment22.target=void\ TypeLetter()
comment22.text=\n\ Use\ this\ whenever\ the\ user\ types\ in\ the\ word\ correctly\n\ The\ method\ increments\ the\ index\ by\ 1\ and\ updates\ the\ displayer\ (see\ Typed_Correctly()\ method)\n
comment23.params=
comment23.target=void\ Typed_Correctly()
comment23.text=\n\ Use\ this\ method\ whenever\ the\ user\ types\ in\ a\ character\ correctly\n\ Method\ removes\ the\ correctly\ typed\ letter\ and\ sets\ the\ current\ colour\ to\ red\n
comment24.params=
comment24.target=void\ Add_Space()
comment25.params=
comment25.target=boolean\ typedCorrectly()
comment26.params=
comment26.target=boolean\ WordTyped()
comment26.text=\n\ Method\ returns\ a\ boolean\ representing\ whether\ the\ user\ has\ successfully\ typed\ in\ the\ word\n
comment27.params=
comment27.target=int\ getSpeed()
comment27.text=\n\ Use\ this\ to\ get\ the\ speed\ of\ the\ word\n
comment28.params=
comment28.target=void\ act()
comment28.text=\n\ Act\ -\ do\ whatever\ the\ Word\ wants\ to\ do.\ This\ method\ is\ called\ whenever\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\n
comment3.params=
comment3.target=int\ getType()
comment3.text=\n\ Get\ the\ word\ type\n
comment4.params=flag
comment4.target=void\ setBoolFinished(boolean)
comment4.text=\n\ Returns\ boolean\ for\ is\ word_finished\n
comment5.params=_display
comment5.target=void\ setDisplay(Word_Display)
comment5.text=\n\ Return\ Word_Display\ object\n
comment6.params=flag
comment6.target=void\ setBoolInputted(boolean)
comment6.text=\n\ Method\ is\ used\ to\ update\ whether\ or\ not\ the\ user\ has\ inputted\ a\ character\n
comment7.params=type\ color
comment7.target=void\ setWord(java.lang.String,\ java.lang.String)
comment7.text=\n\ Use\ this\ to\ change\ the\ colour\ of\ the\ text\ word\ to\ be\ displayed\ on\ screen\n
comment8.params=speednum
comment8.target=void\ setSpeed(int)
comment8.text=\n\ Method\ sets\ the\ speed\ of\ the\ falling\ word\n
comment9.params=
comment9.target=void\ checkBoundaries()
comment9.text=\n\ Makes\ the\ word\ bounce\ off\ if\ it\ reaches\ past\ the\ bottom\ edge\ or\ the\ left\ and\ right\ edge\ of\ the\ screen\n
numComments=29
